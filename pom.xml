<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wine.to.up</groupId>
    <!--    TODO create-service: rename artifact-->
    <artifactId>catalog-service-api</artifactId>
    <!--    TODO create-service: reset version to 0.1.0-->
    <version>2.0.2-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <lombok.version>1.18.10</lombok.version>
        <javax.version>2.0.1.Final</javax.version>
        <protobuf.version>3.1.0</protobuf.version>
        <feign.version>9.3.1</feign.version>
        <spring.boot.version>2.3.1.RELEASE</spring.boot.version>

        <protobuf-plugin.version>3.1.0.1</protobuf-plugin.version>
        <py.location>target/python</py.location>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-gson</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-slf4j</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.11.3</version>
        </dependency>
    </dependencies>

    <!-- Нужен для пуша jar в репозиторий libs-snapshot-local в jfrog artifactory -->
    <distributionManagement>
        <snapshotRepository>
            <id>snapshots</id>
            <name>bc9cbe1b5658-snapshots</name> <!-- Сгенерировано jfrog -->
            <url>http://artifactory:8081/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.os72</groupId>
                <artifactId>protoc-jar-maven-plugin</artifactId>
                <version>${protobuf-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <addSources>all</addSources>
                            <protocVersion>${protobuf.version}</protocVersion>
                            <outputDirectory>src/main/java</outputDirectory>
                            <inputDirectories>
                                <include>src/main/java</include>
                            </inputDirectories>
                            <outputTargets>
                                <outputTarget>
                                    <type>python</type>
                                    <outputDirectory>target/python</outputDirectory>
                                </outputTarget>
                            </outputTargets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>

                    </execution>
                </executions>
                <configuration>
                    <source>
                        def repo_url = "http://77.234.215.138:18082/artifactory/test"
                        def repo_id = "test"

                        new File("${py.location}").eachFile() { file ->
                            serviceName = file.name.split("\\.")[0]

                            log.info("Deploying ${file} ${serviceName}:py:${project.version} to ${repo_id}")

                            execString = "mvn -s settings.xml deploy:deploy-file -Dfile=${file} -Durl=${repo_url} -DrepositoryId=${repo_id} -DgroupId=${project.artifactId} -DartifactId=${serviceName} -Dversion=${project.version} -DuniqueVersion=false -Dclassifier=_pb2"
                            def proc = execString.execute()
                            proc.waitFor()

                            err = proc.err.text
                            if (err != null &amp;&amp; err.length() > 0) {
                                log.error(err)
//                                fail("Deployment failed for ${serviceName}:py:${project.version} to ${repo_id}.  \n Run in verbose mode for full error.")
                            } else {
                                log.info("Successfully deployed ${serviceName}:py:${project.version} to ${repo_id}")
                            }
                        }
                    </source>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>